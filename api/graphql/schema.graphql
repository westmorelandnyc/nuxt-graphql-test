"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    jobs: [Job!]! @all
    locations: [Location!]! @all
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

"An Job WCI has been hired to complete."
type Job {
    "Unique primary key."
    id: ID!

    "The name of the job."
    name: String!

    "The date the job was created."
    created_at: DateTime!

    "The date the job was last updated."
    updated_at: DateTime!

    "The project manager for this job."
    project_manager: User!

    "The Locaitons associated with this job"
    locations: [Location!]! @all

    daily_reports: [DailyReport!]! @all
}

"One of the locations WCI has been hired to complete a job."
type Location {
    "Unique primary key."
    id: ID!

    "The name of the location."
    name: String!

    "The date the location was created."
    created_at: DateTime!

    "The date the location was last updated."
    updated_at: DateTime!

    "The job this location is associated with."
    job: Job!
    
    daily_reports: [DailyReport!]! @all
}

type DailyReport {
    "Unique primary key."
    id: ID!

    name: String!

    "The Report's date."
    date: DateTime!

    "The date the report was created."
    created_at: DateTime!

    "The date the report was last updated."
    updated_at: DateTime!

    "The job this report is associated with."
    job: Job!

    "The user who created this report."
    foreman: User!

    sort_order: Int!
}